.text
.globl main
move $fp $sp
la $a0 ProgStart
li $v0 4
syscall

# stored a new variable in the next offset

# new statement
# stored a new variable in the next offset

# new statement
# stored a new variable in the next offset

# new statement
# stored a new variable in the next offset

# new statement
li $t1, 5 # assinging an int value
sw $t1, -16
lw $t1 -16($sp)
sw $t1 0($sp) # assign to variable

# new statement
li $t1, 2 # assinging an int value
sw $t1, -16
lw $t1 -16($sp)
sw $t1 -4($sp) # assign to variable

# new statement
li $t1, 3 # assinging an int value
sw $t1, -16
lw $t1 -16($sp)
sw $t1 -8($sp) # assign to variable

# new statement
lw $t0 0($sp) # load value
sw $t0 -16($sp)
lw $t0 -4($sp) # load value
sw $t0 -20($sp)
lw $t0 -20($sp)
lw $t1 -16($sp)
sub $t2 $t1 $t0
sw $t2 -16($sp)

lw $t0 -8($sp) # load value
sw $t0 -20($sp)
lw $t0 -20($sp)
lw $t1 -16($sp)
sub $t2 $t1 $t0
sw $t2 -16($sp)

li $t1, 5 # assinging an int value
sw $t1, -20
lw $t0 -20($sp)
lw $t1 -16($sp)
sub $t2 $t1 $t0
sw $t2 -16($sp)

li $t1, 3 # assinging an int value
sw $t1, -20
lw $t0 -20($sp)
lw $t1 -16($sp)
sub $t2 $t1 $t0
sw $t2 -16($sp)

lw $t0 -16($sp)
sw $t0 -12($sp) # assign to variable

# new statement

la $a0 ProgEnd
li $v0 4
syscall
li $v0 10
syscall
.data
ProgStart: .asciiz "Program Start\n"
ProgEnd: .asciiz "Program End\n"